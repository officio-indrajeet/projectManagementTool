{"version":3,"sources":["components/project/CreateProjectButton.js","actions/types.js","actions/ProjectActions.js","components/project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/SecurityActions.js","components/layout/Header.js","components/project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/BacklogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/layout/Landing.js","components/userManagement/Login.js","components/userManagement/Register.js","securityUtils/SecureRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USERS","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","href","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","prototypes","PropTypes","object","isRequired","func","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","headerLinks","security","validToken","user","userIsAuthenticated","style","marginLeft","fullName","userIsNotAuthenticated","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","console","log","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","marginRight","Login","username","password","LoginRequest","login","setItem","decoded","jwt_decode","Register","fullname","confirmPassword","newUser","createNewuser","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85a1c801.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to='/addProject' className='btn btn-lg btn-info'>\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const GET_PROJECTS = 'GET_PROJECTS';\nexport const GET_PROJECT = 'GET_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\n\n// Types of Backlog Actions\n\nexport const GET_BACKLOG = 'GET_BACKLOG';\nexport const GET_PROJECT_TASK = 'GET_PROJECT_TASK';\nexport const DELETE_PROJECT_TASK = 'DELETE_PROJECT_TASK';\n\nexport const SET_CURRENT_USERS = 'SET_CURRENT_USERS';\n","import axios from 'axios';\nimport { DELETE_PROJECT, GET_ERRORS, GET_PROJECT, GET_PROJECTS } from './types';\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post('/api/project', project);\n    history.push('/dashboard');\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get('/api/project/all');\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push('/dashboard');\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      'Are you sure? This will delete the project and all the data related to it. '\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteProject } from '../../actions/ProjectActions';\nimport PropTypes from 'prop-types';\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className='container'>\n        <div className='card card-body bg-light mb-3'>\n          <div className='row'>\n            <div className='col-2'>\n              <span className='mx-auto'>{project.projectIdentifier}</span>\n            </div>\n            <div className='col-lg-6 col-md-4 col-8'>\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className='col-md-4 d-none d-lg-block'>\n              <ul className='list-group'>\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className='list-group-item board'>\n                    <i className='fa fa-flag-checkered pr-1'> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className='list-group-item update'>\n                    <i className='fa fa-edit pr-1'> Update Project Info</i>\n                  </li>\n                </Link>\n                <a href='# '>\n                  <li\n                    className='list-group-item delete'\n                    onClick={this.onDeleteClick.bind(\n                      this,\n                      project.projectIdentifier\n                    )}\n                  >\n                    <i className='fa fa-minus-circle pr-1'> Delete Project</i>\n                  </li>\n                </a>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React, { Component } from 'react';\nimport CreateProjectButton from './project/CreateProjectButton';\nimport ProjectItem from './project/ProjectItem';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProjects } from '../actions/ProjectActions';\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className='projects'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-12'>\n              <h1 className='display-4 text-center'>Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map((project) => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.prototypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from 'axios';\n\nconst setJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport default setJWTToken;\n","import axios from 'axios';\nimport setJWTToken from '../securityUtils/setJWTToken';\nimport { GET_ERRORS, SET_CURRENT_USERS } from './types';\nimport jwt_decode from 'jwt-decode';\n\nexport const createNewuser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post('/api/users/register', newUser);\n    history.push('/login');\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    // post => login request\n    const res = await axios.post('/api/users/login', LoginRequest);\n    //  Extract token from res data\n    const { token } = res.data;\n    // store the token in localStorage\n    localStorage.setItem('jwtToken', token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on react\n    const decoded = jwt_decode(token);\n\n    // dispatch to our securityReducer\n\n    dispatch({\n      type: SET_CURRENT_USERS,\n      payload: decoded,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('jwtToken');\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USERS,\n    payload: {},\n  });\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/SecurityActions';\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = '/';\n  }\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className='collapse navbar-collapse' id='mobile-nav'>\n        <ul className='navbar-nav mr-auto'>\n          <li className='nav-item'>\n            <Link className='nav-link' to='/dashboard'>\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className='navbar-nav ml-auto' style={{ marginLeft: 620 }}>\n          <li className='nav-item'>\n            <Link className='nav-link' to='/dashboard'>\n              <i className='fas fa-user-circle mr-1' /> {user.fullName}\n            </Link>\n          </li>\n          <li className='nav-item'>\n            <Link\n              className='nav-link'\n              to='/logout'\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className='collapse navbar-collapse' id='mobile-nav'>\n        <ul className='navbar-nav ml-auto' style={{ marginLeft: 620 }}>\n          <li className='nav-item'>\n            <Link className='nav-link' to='/register'>\n              Sign Up\n            </Link>\n          </li>\n          <li className='nav-item'>\n            <Link className='nav-link' to='/login'>\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className='navbar navbar-expand-sm navbar-dark bg-primary mb-4'>\n        <div className='container'>\n          <Link to='/' className='navbar-brand'>\n            Personal Project Management Tool\n          </Link>\n          <button\n            className='navbar-toggler'\n            type='button'\n            data-toggle='collapse'\n            data-target='#mobile-nav'\n          >\n            <span className='navbar-toggler-icon' />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.prototypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../actions/ProjectActions';\nimport classnames from 'classnames';\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: '',\n      projectIdentifier: '',\n      description: '',\n      start_date: '',\n      end_date: '',\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Lifecycle Hooks\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        {\n          //check name attribute input fields\n          //create constructor\n          //set state\n          //set value on input fields\n          //create onChange function\n          //set onChange on each input field\n          //bind on constructor\n          //check state change in the react extension\n        }\n\n        <div className='project'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 m-auto'>\n                <h5 className='display-4 text-center'>Create Project form</h5>\n                <hr />\n                <br />\n                <form onSubmit={this.onSubmit}>\n                  <div className='form-group'>\n                    <input\n                      type='text'\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.projectName,\n                      })}\n                      placeholder='Project Name'\n                      name='projectName'\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className='invalid-feedback'>\n                        <p>{errors.projectName}</p>\n                      </div>\n                    )}\n                  </div>\n\n                  <br />\n                  <div className='form-group'>\n                    <input\n                      type='text'\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.projectIdentifier,\n                      })}\n                      placeholder='Unique Project ID'\n                      name='projectIdentifier'\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className='invalid-feedback'>\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n\n                  <br />\n                  <div className='form-group'>\n                    <textarea\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.description,\n                      })}\n                      placeholder='Project Description'\n                      name='description'\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className='invalid-feedback'>\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n\n                  <br />\n                  <h6>Start Date</h6>\n                  <div className='form-group'>\n                    <input\n                      type='date'\n                      className='form-control form-control-lg'\n                      name='start_date'\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <br />\n                  <h6>Estimated End Date</h6>\n                  <div className='form-group'>\n                    <input\n                      type='date'\n                      className='form-control form-control-lg'\n                      name='end_date'\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type='submit'\n                    className='btn btn-primary btn-block mt-4'\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.prototypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from '../actions/types';\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {},\n};\n\n// eslint-disable-next-line\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload,\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload,\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          (project_task) => project_task.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\n// eslint-disable-next-line\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { DELETE_PROJECT, GET_PROJECT, GET_PROJECTS } from '../actions/types';\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\n// eslint-disable-next-line\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USERS } from '../actions/types';\n\n/* eslint-disable import/no-anonymous-default-export */\n\nconst initialState = {\n  user: {},\n  validToken: false,\n};\n\nconst booleanActionPayload = (payload) => {\n  if (payload) return true;\n  else return false;\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USERS:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport backlogReducer from './backlogReducer';\nimport errorReducer from './errorReducer';\nimport projectReducer from './projectReducer';\nimport securityReducer from './securityReducer';\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\n// let store;\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(...middleware)\n    // other store enhancers if any\n  )\n);\n\n// if (window.navigator.userAgent.includes('chrome')) {\n//   store = createStore(\n//     rootReducer,\n//     initialState,\n//     compose(\n//       applyMiddleware(...middleware),\n//       window.__REDUX_DEVTOOLS_EXTENSION__ &&\n//         window.__REDUX_DEVTOOLS_EXTENSION__()\n//     )\n//   );\n// } else {\n//   store = createStore(\n//     rootReducer,\n//     initialState,\n//     compose(applyMiddleware(...middleware))\n//   );\n// }\n\nexport default store;\n","import React, { Component } from 'react';\nimport { getProject, createProject } from '../../actions/ProjectActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n\nclass UpdateProject extends Component {\n  // set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: '',\n      projectName: '',\n      projectIdentifier: '',\n      description: '',\n      start_date: '',\n      end_date: '',\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    });\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className='project'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-8 m-auto'>\n              <h5 className='display-4 text-center'>Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.projectName,\n                    })}\n                    placeholder='Project Name'\n                    name='projectName'\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className='invalid-feedback'>\n                      <p>{errors.projectName}</p>\n                    </div>\n                  )}\n                </div>\n                <br />\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.projectIdentifier,\n                    })}\n                    placeholder='Unique Project ID'\n                    name='projectIdentifier'\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                  {errors.projectIdentifier && (\n                    <div className='invalid-feedback'>\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n\n                <br />\n                <div className='form-group'>\n                  <textarea\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.description,\n                    })}\n                    placeholder='Project Description'\n                    name='description'\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className='invalid-feedback'>{errors.description}</div>\n                  )}\n                </div>\n                <br />\n                <h6>Start Date</h6>\n                <div className='form-group'>\n                  <input\n                    type='date'\n                    className='form-control form-control-lg'\n                    name='start_date'\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <br />\n                <h6>Estimated End Date</h6>\n                <div className='form-group'>\n                  <input\n                    type='date'\n                    className='form-control form-control-lg'\n                    name='end_date'\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <br />\n\n                <input\n                  type='submit'\n                  className='btn btn-primary btn-block mt-4'\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteProjectTask } from '../../../actions/BacklogActions';\n\nclass ProjectTask extends Component {\n  onDeleteClick = (backlog_id, pt_id) => {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  };\n\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = 'bg-danger text-light';\n      priorityString = 'HIGH';\n    }\n    if (project_task.priority === 2) {\n      priorityClass = 'bg-warning text-light';\n      priorityString = 'MEDIUM';\n    }\n    if (project_task.priority === 3) {\n      priorityClass = 'bg-info text-light';\n      priorityString = 'LOW';\n    }\n\n    return (\n      <div className='card mb-1 bg-light'>\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className='card-body bg-light'>\n          <h5 className='card-title'>{project_task.summary}</h5>\n          <p className='card-text text-truncate '>\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className='btn btn-primary'\n          >\n            View / Update\n          </Link>\n          <button\n            className='btn btn-danger ml-4'\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n            style={{ marginLeft: 10 }}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from 'axios';\nimport {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n  GET_ERRORS,\n} from './types';\n\nexport const addProjectTask = (backlog_id, project_task, history) => async (\n  dispatch\n) => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getBacklog = (backlog_id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\n  dispatch\n) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data,\n    });\n  } catch (err) {\n    history.push('/dashboard');\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\n  try {\n    if (\n      window.confirm(\n        `Are you sure? This will delete the project Task ${pt_id} , This action cannot be undone.`\n      )\n    ) {\n      await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n      dispatch({\n        type: DELETE_PROJECT_TASK,\n        payload: pt_id,\n      });\n    }\n  } catch (err) {}\n};\n","import React, { Component } from 'react';\nimport ProjectTask from './ProjectTasks/ProjectTask';\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === 'TO_DO') {\n        todoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === 'IN_PROGRESS') {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === 'DONE') {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className='container'>\n        <div className='row'>\n          <div className='col-md-4'>\n            <div className='card text-center mb-2'>\n              <div className='card-header bg-secondary text-white'>\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className='col-md-4'>\n            <div className='card text-center mb-2'>\n              <div className='card-header bg-primary text-white'>\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className='col-md-4'>\n            <div className='card text-center mb-2'>\n              <div className='card-header bg-success text-white'>\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Backlog;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Backlog from './Backlog';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getBacklog } from '../../actions/BacklogActions';\n\nclass ProjectBoard extends Component {\n  // constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      errors: nextProps.errors,\n    });\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className='alert alert-danger text-center' role='alert'>\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className='alert alert-danger text-center' role='alert'>\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className='alert alert-info text-center' role='alert'>\n              No Project Tasks on this Board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className='container'>\n        <Link to={`/addProjectTask/${id}`} className='btn btn-primary mb-3'>\n          <i className='fas fa-plus-circle'> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.prototypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addProjectTask } from '../../../actions/BacklogActions';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = this.props.match.params;\n    console.log(id);\n\n    this.state = {\n      summary: '',\n      acceptanceCriteria: '',\n      status: '',\n      priority: 0,\n      dueDate: '',\n      projectIdentifier: id,\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Lifecycle Hooks\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  // on change\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  // on submit\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n\n    // console.log(newTask);\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className='add-PBI'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-8 m-auto'>\n              <Link to={`/projectBoard/${id}`} className='btn btn-light'>\n                Back to Project Board\n              </Link>\n              <h4 className='display-4 text-center'>Add Project Task</h4>\n              <p className='lead text-center'>Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.summary,\n                    })}\n                    name='summary'\n                    placeholder='Project Task summary'\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className='invalid-feedback'>{errors.summary}</div>\n                  )}\n                </div>\n                <br />\n                <div className='form-group'>\n                  <textarea\n                    className='form-control form-control-lg'\n                    placeholder='Acceptance Criteria'\n                    name='acceptanceCriteria'\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                  <br />\n                </div>\n                <h6>Due Date</h6>\n                <div className='form-group'>\n                  <input\n                    type='date'\n                    className='form-control form-control-lg'\n                    name='dueDate'\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                  <br />\n                </div>\n                <div className='form-group'>\n                  <select\n                    className='form-control form-control-lg'\n                    name='priority'\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                  <br />\n                </div>\n\n                <div className='form-group'>\n                  <select\n                    className='form-control form-control-lg'\n                    name='status'\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=''>Select Status</option>\n                    <option value='TO_DO'>TO DO</option>\n                    <option value='IN_PROGRESS'>IN PROGRESS</option>\n                    <option value='DONE'>DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type='submit'\n                  className='btn btn-primary btn-block mt-4'\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from '../../../actions/BacklogActions';\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: '',\n      projectSequence: '',\n      summary: '',\n      acceptanceCriteria: '',\n      status: '',\n      priority: '',\n      dueDate: '',\n      projectIdentifier: '',\n      create_At: '',\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    });\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const updateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At,\n    };\n\n    // console.log(updateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className='add-PBI'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-8 m-auto'>\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className='btn btn-light'\n              >\n                Back to Project Board\n              </Link>\n              <h4 className='display-4 text-center'>Update Project Task</h4>\n              <p className='lead text-center'>\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{' '}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.summary,\n                    })}\n                    name='summary'\n                    placeholder='Project Task summary'\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className='invalid-feedback'>{errors.summary}</div>\n                  )}\n                </div>\n                <br />\n                <div className='form-group'>\n                  <textarea\n                    className='form-control form-control-lg'\n                    placeholder='Acceptance Criteria'\n                    name='acceptanceCriteria'\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                  <br />\n                </div>\n                <h6>Due Date</h6>\n                <div className='form-group'>\n                  <input\n                    type='date'\n                    className='form-control form-control-lg'\n                    name='dueDate'\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                  <br />\n                </div>\n                <div className='form-group'>\n                  <select\n                    className='form-control form-control-lg'\n                    name='priority'\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                  <br />\n                </div>\n\n                <div className='form-group'>\n                  <select\n                    className='form-control form-control-lg'\n                    name='status'\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=''>Select Status</option>\n                    <option value='TO_DO'>TO DO</option>\n                    <option value='IN_PROGRESS'>IN PROGRESS</option>\n                    <option value='DONE'>DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type='submit'\n                  className='btn btn-primary btn-block mt-4'\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push('/dashboard');\n    }\n  }\n  render() {\n    return (\n      <div className='landing'>\n        <div className='light-overlay landing-inner text-dark'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-12 text-center'>\n                <h1 className='display-3 mb-4'>\n                  Personal Project Management Tool\n                </h1>\n                <p className='lead'>\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link\n                  to='/register'\n                  className='btn btn-lg btn-primary mr-2'\n                  style={{ marginRight: 10 }}\n                >\n                  Sign Up\n                </Link>\n\n                <Link to='/login' className='btn btn-lg btn-secondary mr-2'>\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { login } from '../../actions/SecurityActions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push('/dashboard');\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    // console.log(LoginRequest);\n    this.props.login(LoginRequest);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className='login'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-8 m-auto'>\n              <h1 className='display-4 text-center'>Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.username,\n                    })}\n                    placeholder='Username'\n                    name='username'\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className='invalid-feedback'>\n                      <p>{errors.username}</p>\n                    </div>\n                  )}\n                </div>\n                <br />\n                <div className='form-group'>\n                  <input\n                    type='password'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.password,\n                    })}\n                    placeholder='Password'\n                    name='password'\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className='invalid-feedback'>\n                      <p>{errors.password}</p>\n                    </div>\n                  )}\n                </div>\n\n                <input type='submit' className='btn btn-info  col-12 mt-4' />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.prototypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { createNewuser } from '../../actions/SecurityActions';\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: '',\n      fullname: '',\n      password: '',\n      confirmPassword: '',\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Lifecycle Hooks\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullname: this.state.fullname,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    // console.log(newUser);\n\n    this.props.createNewuser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className='register'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-8 m-auto'>\n              <h1 className='display-4 text-center'>Sign Up</h1>\n              <p className='lead text-center'>Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.fullname,\n                    })}\n                    placeholder='Full Name'\n                    name='fullname'\n                    value={this.state.fullname}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullname && (\n                    <div className='invalid-feedback'>\n                      <p>{errors.fullname}</p>\n                    </div>\n                  )}\n                </div>\n                <br />\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.username,\n                    })}\n                    placeholder='Username'\n                    name='username'\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullname && (\n                    <div className='invalid-feedback'>\n                      <p>{errors.username}</p>\n                    </div>\n                  )}\n                </div>\n                <br />\n                <div className='form-group'>\n                  <input\n                    type='password'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.password,\n                    })}\n                    placeholder='Password'\n                    name='password'\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className='invalid-feedback'>\n                      <p>{errors.password}</p>\n                    </div>\n                  )}\n                </div>\n                <br />\n                <div className='form-group'>\n                  <input\n                    type='password'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.confirmPassword,\n                    })}\n                    placeholder='Confirm Password'\n                    name='confirmPassword'\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className='invalid-feedback'>\n                      <p>{errors.confirmPassword}</p>\n                    </div>\n                  )}\n                </div>\n\n                <input type='submit' className='btn btn-info col-12 mt-4' />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.prototypes = {\n  createNewuser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { createNewuser })(Register);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to='/login' />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AddProject from './components/project/AddProject';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport UpdateProject from './components/project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/layout/Landing';\nimport Login from './components/userManagement/Login';\nimport Register from './components/userManagement/Register';\nimport jwt_decode from 'jwt-decode';\nimport setJWTToken from './securityUtils/setJWTToken';\nimport { SET_CURRENT_USERS } from './actions/types';\nimport { logout } from './actions/SecurityActions';\nimport SecuredRoute from './securityUtils/SecureRoutes';\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USERS,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = '/';\n  }\n}\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className='App'>\n          <Header />\n\n          {\n            // public Routes\n          }\n          <Route path='/' component={Landing} exact />\n          <Route path='/login' component={Login} exact />\n          <Route path='/register' component={Register} exact />\n\n          {\n            // private Routes\n          }\n          <Switch>\n            <SecuredRoute path='/dashboard' component={Dashboard} exact />\n            <SecuredRoute path='/addProject' component={AddProject} exact />\n            <SecuredRoute\n              path='/updateProject/:id'\n              component={UpdateProject}\n              exact\n            />\n            <SecuredRoute\n              path='/projectBoard/:id'\n              component={ProjectBoard}\n              exact\n            />\n            <SecuredRoute\n              path='/addProjectTask/:id'\n              component={AddProjectTask}\n              exact\n            />\n            <SecuredRoute\n              path='/updateProjectTask/:backlog_id/:pt_id'\n              component={UpdateProjectTask}\n              exact\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}